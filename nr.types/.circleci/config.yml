# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  test-3.6: &test
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.6.1
    environment:
      INSTALL_PYTHON_ENV1: python3 -m venv venv

    steps:
      - checkout

      # Download and cache dependencies
      #- restore_cache:
      #    keys:
      #      - v1-dependencies-{{ checksum "setup.py" }}
      #      # fallback to using the latest cache if no exact match is found
      #      - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            $INSTALL_PYTHON_ENV1
            $INSTALL_PYTHON_ENV2
            $INSTALL_PYTHON_ENV3
            . venv/bin/activate
            pip install -e .[full,test]

      #- save_cache:
      #    paths:
      #      - ./venv
      #    key: v1-dependencies-{{ checksum "setup.py" }}

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            pytest --cov=./src/nr
            coverage html

      - run:
          name: pylint
          command: |
            . venv/bin/activate
            pip install pylint
            pylint --rcfile=.pylintrc nr.types || true

      - store_artifacts:
          path: .coverage

      - store_artifacts:
          path: htmlcov

  test-3.8:
    <<: *test
    docker:
      - image: circleci/python:3.8.0b2

  test-3.7:
    <<: *test
    docker:
      - image: circleci/python:3.7.3

  test-3.5:
    <<: *test
    docker:
      - image: circleci/python:3.5.7

  test-3.4:
    <<: *test
    docker:
      - image: circleci/python:3.4.10

  test-2.7:
    <<: *test
    docker:
      - image: circleci/python:2.7.15
    environment:
      INSTALL_PYTHON_ENV1: pip install virtualenv
      INSTALL_PYTHON_ENV2: python -m virtualenv venv

  publish:
    <<: *test

    steps:
      - checkout
      - run:
          name: install environment
          command: |
            $INSTALL_PYTHON_ENV1
            . venv/bin/activate
            pip install twine
      - run:
          name: verify version
          command: |
            . venv/bin/activate
            python setup.py verify
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: build
          command: |
            . venv/bin/activate
            python setup sdist
      - run:
          name: upload
          command: |
            . venv/bin/activate
            twine upload dist/*

workflows:
  version: 2
  test_and_publish:
    jobs:
      - test-3.8
      - test-3.7
      - test-3.6
      - test-3.5
      - test-3.4
      - test-2.7
      - publish:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
          requires:
            - test-3.8
            - test-3.7
            - test-3.6
            - test-3.5
            - test-3.4
            - test-2.7
